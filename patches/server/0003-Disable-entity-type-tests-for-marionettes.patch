From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lucy Poulton <lucy.poulton@noxcrew.com>
Date: Wed, 22 May 2024 20:23:25 +0100
Subject: [PATCH] Disable entity type tests for marionettes


diff --git a/src/test/java/org/bukkit/entity/EntityTypesTest.java b/src/test/java/org/bukkit/entity/EntityTypesTest.java
index 952924abae79cc504342bbdb6f6953ab8a6cc295..1e849b176b5ccd704056d3adb0143658015a399c 100644
--- a/src/test/java/org/bukkit/entity/EntityTypesTest.java
+++ b/src/test/java/org/bukkit/entity/EntityTypesTest.java
@@ -14,7 +14,7 @@ public class EntityTypesTest extends AbstractTestingBase {
     @Test
     public void testMaps() {
         Set<EntityType> allBukkit = Arrays.stream(EntityType.values()).filter((b) -> b.getName() != null).collect(Collectors.toSet());
-
+        allBukkit.remove(EntityType.MARIONETTE); // Marionette - no NMS type is intentional
         for (net.minecraft.world.entity.EntityType<?> nms : BuiltInRegistries.ENTITY_TYPE) { // Paper - remap fix
             ResourceLocation key = net.minecraft.world.entity.EntityType.getKey(nms); // Paper - remap fix
 
@@ -30,6 +30,11 @@ public class EntityTypesTest extends AbstractTestingBase {
     @Test
     public void testTranslationKey() {
         for (org.bukkit.entity.EntityType entityType : org.bukkit.entity.EntityType.values()) {
+            // Marionette start - Ignore marionettes
+            // They don't have their own NMS entity type, so the client can't possibly know about them anyway.
+            // It's not ideal, but then is anything I've written as part of this good?
+            if (entityType == EntityType.MARIONETTE) continue;
+            // Marionette end
             // Currently EntityType#getTranslationKey has a validation for null name then for test skip this and check correct names.
             if (entityType.getName() != null) {
                 assertNotNull(entityType.getTranslationKey(), "Nulllable translation key for " + entityType);
